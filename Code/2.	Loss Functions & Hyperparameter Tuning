import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

# --- Multi-class Classification Example ---
y_true_multi = np.array([2, 0, 1, 2])  # Class indices (e.g., 0, 1, 2)
y_pred_multi_original = np.array([[0.1, 0.2, 0.7],  # Probabilities for each class
                                 [0.8, 0.1, 0.1],
                                 [0.2, 0.7, 0.1],
                                 [0.1, 0.2, 0.7]])

# CCE (SparseCategoricalCrossentropy - Correct for multi-class with class indices)
cce = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False)  # from_logits=False is crucial here!
cce_loss_original_multi = cce(y_true_multi, y_pred_multi_original).numpy()


# --- Plotting ---

loss_names_multi = ['CCE']  # Only CCE is appropriate here
original_losses_multi = [cce_loss_original_multi]


# Plotting for Multi-class
x_pos_multi = np.arange(len(loss_names_multi))
plt.figure(figsize=(6, 5))
plt.bar(x_pos_multi, original_losses_multi, label='Multi-class Classification')
plt.xticks(x_pos_multi, loss_names_multi)
plt.ylabel('Loss Value')
plt.title('Loss Comparison (Multi-class)')
plt.legend()
plt.show()



# --- Printing Loss Values ---

print("\n--- Loss Values (Multi-class) ---")
print(f"CCE: {cce_loss_original_multi}")
