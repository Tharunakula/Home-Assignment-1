import tensorflow as tf

# 1. Create a random tensor of shape (4, 6)
tensor = tf.random.normal(shape=(4, 6))

# 2. Find its rank and shape using TensorFlow functions.
rank_before = tf.rank(tensor)
shape_before = tf.shape(tensor)

print("Original Tensor:")
print(tensor)
print("Rank before reshaping:", rank_before.numpy())
print("Shape before reshaping:", shape_before.numpy())

# 3. Reshape it into (2, 3, 4) and transpose it to (3, 2, 4).
reshaped_tensor = tf.reshape(tensor, (2, 3, 4))
transposed_tensor = tf.transpose(reshaped_tensor, perm=[1, 0, 2])  # Note the permutation for transpose

rank_after_reshape = tf.rank(reshaped_tensor)
shape_after_reshape = tf.shape(reshaped_tensor)

rank_after_transpose = tf.rank(transposed_tensor)
shape_after_transpose = tf.shape(transposed_tensor)


print("\nReshaped Tensor:")
print(reshaped_tensor)
print("Rank after reshaping:", rank_after_reshape.numpy())
print("Shape after reshaping:", shape_after_reshape.numpy())

print("\nTransposed Tensor:")
print(transposed_tensor)
print("Rank after transposing:", rank_after_transpose.numpy())
print("Shape after transposing:", shape_after_transpose.numpy())



# 4. Broadcast a smaller tensor (1, 4) to match the larger tensor and add them.
smaller_tensor = tf.random.normal(shape=(1, 4))

# Broadcasting happens implicitly during the addition.  No explicit broadcast needed.
broadcasted_sum = transposed_tensor + smaller_tensor

print("\nResult after broadcasting and addition:")
print(broadcasted_sum)
